/*
Deployment script for POS_Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "POS_Database"
:setvar DefaultFilePrefix "POS_Database"
:setvar DefaultDataPath "C:\Users\Administrator\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Administrator\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering Procedure [dbo].[CreatePOS]...';


GO
ALTER PROCEDURE [dbo].[CreatePOS]
@SaleID NVARCHAR (10)= NULL,
@ProductName NVARCHAR (10) = NULL,
@Quantity INT  = NULL,
@Price INT = NULL,
@TotalAmount INT = NULL
AS
 BEGIN 
    INSERT INTO POS (SaleId, ProductName, Quantity, Price)
      Values(@SaleId, @ProductName, @Quantity, @Price);
End
GO
PRINT N'Altering Procedure [dbo].[UpdatePOS]...';


GO
ALTER PROCEDURE [dbo].[UpdatePOS]
    @SaleId NVARCHAR(10) = NULL,
	@ProductName NVARCHAR(10) = NULL,
	@Quantity INT = NULL,
	@Price INT = NULL,
	@TotalAmount INT = NULL
AS
	BEGIN
	UPDATE [dbo].[POS]
	SET 
	[ProductName] = @ProductName,
	[Quantity] = @Quantity,
	[Price] = @Price,
	[TotalAmount] = @TotalAmount

	WHERE [SaleId] = @SaleId;

	END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
