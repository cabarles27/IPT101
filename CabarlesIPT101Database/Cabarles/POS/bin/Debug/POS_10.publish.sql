/*
Deployment script for POS_Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "POS_Database"
:setvar DefaultFilePrefix "POS_Database"
:setvar DefaultDataPath "C:\Users\Administrator\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Administrator\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column Quantity in table [dbo].[POS] is currently  NCHAR (10) NULL but is being changed to  INT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[POS])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering Table [dbo].[POS]...';


GO
ALTER TABLE [dbo].[POS] ALTER COLUMN [Price] NVARCHAR (10) NULL;

ALTER TABLE [dbo].[POS] ALTER COLUMN [Quantity] INT NULL;

ALTER TABLE [dbo].[POS] ALTER COLUMN [SaleId] NVARCHAR (10) NULL;

ALTER TABLE [dbo].[POS] ALTER COLUMN [TotalAmount] NVARCHAR (10) NULL;


GO
PRINT N'Altering Procedure [dbo].[CreatePOS]...';


GO
ALTER PROCEDURE [dbo].[CreatePOS]
@SaleID NVARCHAR (10)= NULL,
@ProductName NCHAR (10) = NULL,
@Quantity INT  = NULL,
@Price NVARCHAR (10) = NULL,
@TotalAmount NVARCHAR (10) = NULL
AS
 BEGIN 
    INSERT INTO POS (ProductName, Quantity, Price)
      Values(@ProductName, @Quantity, @Price);
End
GO
PRINT N'Altering Procedure [dbo].[DeletePOS]...';


GO
ALTER PROCEDURE [dbo].[DeletePOS]
	@SaleId NVARCHAR(10) = NULL
AS
BEGIN
	DELETE FROM [dbo].[POS] WHERE SaleId = @SaleId
end
GO
PRINT N'Altering Procedure [dbo].[GetPOS]...';


GO
ALTER PROCEDURE [dbo].[GetPOS]
	@SaleId NVARCHAR(10) = NULL
AS
BEGIN
	SELECT * FROM [dbo].[POS] AS a WHERE a.[SaleId] = @SaleId;
END
GO
PRINT N'Altering Procedure [dbo].[UpdatePOS]...';


GO
ALTER PROCEDURE [dbo].[UpdatePOS]
    @SaleId NVARCHAR(10) = NULL,
	@ProductName NCHAR(10) = NULL,
	@Quantity INT = NULL,
	@Price NVARCHAR(10) = NULL,
	@TotalAmount NVARCHAR(10) = NULL
AS
	BEGIN
	UPDATE [dbo].[POS]
	SET [SaleId] = @SaleId,
	[ProductName] = @ProductName,
	[Quantity] = @Quantity,
	[Price] = @Price,
	[TotalAmount] = @TotalAmount

	WHERE [SaleId] = @SaleId;

	END
GO
PRINT N'Refreshing Procedure [dbo].[GetAllPOS]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetAllPOS]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
